{"ast":null,"code":"var _jsxFileName = \"/Users/dariabrusnitsina/Yandex.Disk.localized/Programming/Projects/react-e-commerce/client/src/components/ui/loginForm.jsx\";\nimport React from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction validateEmail(value) {\n  if (!value) {\n    return 'Required';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n    return 'Invalid email address';\n  }\n}\nfunction validatePassword(value) {\n  if (!value) {\n    return 'Required';\n  }\n}\nexport const LoginForm = () => /*#__PURE__*/_jsxDEV(Formik, {\n  initialValues: {\n    username: '',\n    email: ''\n  },\n  onSubmit: values => {\n    // same shape as initial values\n    console.log(values);\n  },\n  children: _ref => {\n    let {\n      errors,\n      touched,\n      isValidating\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        name: \"email\",\n        validate: validateEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), errors.email && touched.email && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 51\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"username\",\n        validate: validateUsername\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), errors.username && touched.username && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: errors.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 57\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 19,\n  columnNumber: 5\n}, this);\n_c = LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","Formik","Form","Field","validateEmail","value","test","validatePassword","LoginForm","username","email","values","console","log","errors","touched","isValidating","validateUsername"],"sources":["/Users/dariabrusnitsina/Yandex.Disk.localized/Programming/Projects/react-e-commerce/client/src/components/ui/loginForm.jsx"],"sourcesContent":["import React from \"react\";\nimport { Formik, Form, Field } from \"formik\";\n\nfunction validateEmail(value) {\n    if (!value) {\n        return  'Required';\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n        return 'Invalid email address';\n    }\n}\n\nfunction validatePassword(value) {\n    if (!value) {\n        return  'Required';\n    }\n}\n\nexport const LoginForm = () => (\n    <Formik\n        initialValues={{\n            username: '',\n            email: '',\n        }}\n        onSubmit={values => {\n            // same shape as initial values\n            console.log(values);\n        }}\n    >\n        {({ errors, touched, isValidating }) => (\n            <Form>\n                <Field name=\"email\" validate={validateEmail} />\n                {errors.email && touched.email && <div>{errors.email}</div>}\n\n                <Field name=\"username\" validate={validateUsername} />\n                {errors.username && touched.username && <div>{errors.username}</div>}\n\n                <button type=\"submit\">Submit</button>\n            </Form>\n        )}\n    </Formik>\n);"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,IAAI,EAAEC,KAAK,QAAQ,QAAQ;AAAC;AAE7C,SAASC,aAAa,CAACC,KAAK,EAAE;EAC1B,IAAI,CAACA,KAAK,EAAE;IACR,OAAQ,UAAU;EACtB,CAAC,MAAM,IAAI,CAAC,2CAA2C,CAACC,IAAI,CAACD,KAAK,CAAC,EAAE;IACjE,OAAO,uBAAuB;EAClC;AACJ;AAEA,SAASE,gBAAgB,CAACF,KAAK,EAAE;EAC7B,IAAI,CAACA,KAAK,EAAE;IACR,OAAQ,UAAU;EACtB;AACJ;AAEA,OAAO,MAAMG,SAAS,GAAG,mBACrB,QAAC,MAAM;EACH,aAAa,EAAE;IACXC,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE;EACX,CAAE;EACF,QAAQ,EAAEC,MAAM,IAAI;IAChB;IACAC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;EACvB,CAAE;EAAA,UAED;IAAA,IAAC;MAAEG,MAAM;MAAEC,OAAO;MAAEC;IAAa,CAAC;IAAA,oBAC/B,QAAC,IAAI;MAAA,wBACD,QAAC,KAAK;QAAC,IAAI,EAAC,OAAO;QAAC,QAAQ,EAAEZ;MAAc;QAAA;QAAA;QAAA;MAAA,QAAG,EAC9CU,MAAM,CAACJ,KAAK,IAAIK,OAAO,CAACL,KAAK,iBAAI;QAAA,UAAMI,MAAM,CAACJ;MAAK;QAAA;QAAA;QAAA;MAAA,QAAO,eAE3D,QAAC,KAAK;QAAC,IAAI,EAAC,UAAU;QAAC,QAAQ,EAAEO;MAAiB;QAAA;QAAA;QAAA;MAAA,QAAG,EACpDH,MAAM,CAACL,QAAQ,IAAIM,OAAO,CAACN,QAAQ,iBAAI;QAAA,UAAMK,MAAM,CAACL;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAO,eAEpE;QAAQ,IAAI,EAAC,QAAQ;QAAA,UAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAClC;EAAA;AACV;EAAA;EAAA;EAAA;AAAA,QAER;AAAC,KAvBWD,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}