{"ast":null,"code":"var _jsxFileName = \"/Users/dariabrusnitsina/Yandex.Disk.localized/Programming/Projects/react-e-commerce/client/src/components/layouts/LoginPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\n// Librares\nimport * as Yup from \"yup\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useFormik, FormikProvider } from \"formik\";\n// Store\n// import { login } from \"../store/authSlice\";\n// import { clearMessage } from \"../store/messageSlice\";\n// // Components\n// import SpinLoading from \"../components/SpinLoader\";\n// import StyledNavLink from \"../components/StyledNavLink\";\n// import Button from \"../components/Button\";\nimport TextField from \"../inputs/TextInput\";\n// import Card from \"../components/Card\";\n// Icons\nimport { UserIcon, KeyIcon } from \"@heroicons/react/outline\";\nimport { NavLink, useLocation, useNavigate } from \"react-router-dom\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = Yup.object().shape({\n  username: Yup.string().required(\"This field is required!\"),\n  password: Yup.string().required(\"This field is required!\")\n});\nconst initialValues = {\n  username: \"\",\n  password: \"\"\n};\nconst LoginPage = () => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const {\n    message\n  } = useSelector(state => state.message);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const location = useLocation();\n  useEffect(() => {\n    // dispatch(clearMessage());\n  }, [dispatch]);\n  const handleLogin = formValue => {\n    // const { username, password } = formValue;\n    // setLoading(true);\n    // const redirect = location.state\n    //     ? location.state.referrer.pathname\n    //     : \"/posts\";\n    // dispatch(login({ username, password }))\n    //     .unwrap()\n    //     .then(() => {\n    //         navigate(redirect, { replace: true });\n    //     })\n    //     .catch(() => {\n    //         setLoading(false);\n    //     });\n  };\n  const formik = useFormik({\n    initialValues,\n    validationSchema,\n    onSubmit: handleLogin\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-12 text-slate-900\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-sm text-slate-600\",\n        children: [\"or\", \" \", /*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"../signUp\",\n          styleType: \"underline\",\n          children: [\" \", \"start your 14-day free trial\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormikProvider, {\n        value: formik,\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"space-y-6 min-w-[200px] w-full mb-10\",\n          onSubmit: formik.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Username\",\n            name: \"username\",\n            icon: UserIcon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Password\",\n            name: \"password\",\n            type: \"password\",\n            icon: KeyIcon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pt-2\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              disabled: loading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-danger\",\n            role: \"alert\",\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(LoginPage, \"wrkleTsk31Pgo1IOZJbzZqhecFc=\", false, function () {\n  return [useSelector, useNavigate, useDispatch, useLocation, useFormik];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useEffect","Yup","useSelector","useDispatch","useFormik","FormikProvider","TextField","UserIcon","KeyIcon","NavLink","useLocation","useNavigate","validationSchema","object","shape","username","string","required","password","initialValues","LoginPage","loading","setLoading","message","state","navigate","dispatch","location","handleLogin","formValue","formik","onSubmit","handleSubmit"],"sources":["/Users/dariabrusnitsina/Yandex.Disk.localized/Programming/Projects/react-e-commerce/client/src/components/layouts/LoginPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n// Librares\nimport * as Yup from \"yup\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useFormik, FormikProvider } from \"formik\";\n// Store\n// import { login } from \"../store/authSlice\";\n// import { clearMessage } from \"../store/messageSlice\";\n// // Components\n// import SpinLoading from \"../components/SpinLoader\";\n// import StyledNavLink from \"../components/StyledNavLink\";\n// import Button from \"../components/Button\";\nimport TextField from \"../inputs/TextInput\";\n// import Card from \"../components/Card\";\n// Icons\nimport { UserIcon, KeyIcon } from \"@heroicons/react/outline\";\nimport {NavLink, useLocation, useNavigate} from \"react-router-dom\";\n\nconst validationSchema = Yup.object().shape({\n    username: Yup.string().required(\"This field is required!\"),\n    password: Yup.string().required(\"This field is required!\"),\n});\n\nconst initialValues = {\n    username: \"\",\n    password: \"\",\n};\n\nconst LoginPage = () => {\n    const [loading, setLoading] = useState(false);\n    const { message } = useSelector((state) => state.message);\n\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    const location = useLocation();\n\n    useEffect(() => {\n        // dispatch(clearMessage());\n    }, [dispatch]);\n\n    const handleLogin = (formValue) => {\n        // const { username, password } = formValue;\n        // setLoading(true);\n        // const redirect = location.state\n        //     ? location.state.referrer.pathname\n        //     : \"/posts\";\n        // dispatch(login({ username, password }))\n        //     .unwrap()\n        //     .then(() => {\n        //         navigate(redirect, { replace: true });\n        //     })\n        //     .catch(() => {\n        //         setLoading(false);\n        //     });\n    };\n\n    const formik = useFormik({\n        initialValues,\n        validationSchema,\n        onSubmit: handleLogin,\n    });\n\n    return (\n        <>\n            <div className='mb-12 text-slate-900'>\n                <h1>Login</h1>\n\n                <div className='text-sm text-slate-600'>\n                    or{\" \"}\n                    <NavLink to='../signUp' styleType='underline'>\n                        {\" \"}\n                        start your 14-day free trial\n                    </NavLink>\n                </div>\n                <FormikProvider value={formik}>\n                    <form\n                        className='space-y-6 min-w-[200px] w-full mb-10'\n                        onSubmit={formik.handleSubmit}\n                    >\n                        <TextField\n                            label='Username'\n                            name='username'\n                            icon={UserIcon}\n                        />\n                        <TextField\n                            label='Password'\n                            name='password'\n                            type='password'\n                            icon={KeyIcon}\n                        />\n                        <div className='pt-2'>\n                            <button disabled={loading}>\n                                {/*{loading && <SpinLoading />} Log In*/}\n                            </button>\n                        </div>\n                    </form>\n\n                    {message && (\n                        <div className='form-group'>\n                            <div className='alert alert-danger' role='alert'>\n                                {message}\n                            </div>\n                        </div>\n                    )}\n                </FormikProvider>\n            </div>\n        </>\n    );\n};\n\nexport default LoginPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}