{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport isOutdated from \"../utils/isOutdated\";\nimport categoriesService from \"../services/categories.service\";\nconst categoriesSlice = createSlice({\n  name: \"categories\",\n  initialState: {\n    entities: null,\n    isLoading: true,\n    error: null,\n    lastFetch: null\n  },\n  reducers: {\n    categoriesRequested: state => {\n      state.isLoading = true;\n    },\n    categoriesReceived: (state, action) => {\n      state.entities = action.payload;\n      state.lastFetch = Date.now();\n      state.isLoading = false;\n    },\n    categoriesRequestFiled: (state, action) => {\n      state.error = action.payload;\n      state.isLoading = false;\n    }\n  }\n});\nconst {\n  reducer: categoriesReducer,\n  actions\n} = categoriesSlice;\nconst {\n  categoriesRequested,\n  categoriesReceived,\n  categoriesRequestFiled\n} = actions;\nexport const loadCategoriesList = () => async (dispatch, getState) => {\n  const {\n    lastFetch\n  } = getState().items;\n  if (isOutdated(lastFetch)) {\n    dispatch(categoriesRequested());\n    try {\n      const {\n        content\n      } = await categoriesService.fetchAll();\n      dispatch(categoriesReceived(content));\n    } catch (error) {\n      dispatch(categoriesRequestFiled(error.message));\n    }\n  }\n};\nexport const getCategories = () => state => state.categories.entities;\nexport const getCategoriesLoadingStatus = () => state => state.categories.isLoading;\nexport const getCategoriesByIds = categoriesIds => state => {\n  if (state.categories.entities) {\n    const categoriesArray = [];\n    for (const categoryId of categoriesIds) {\n      for (const category of state.categories.entities) {\n        if (category._id === categoryId) {\n          categoriesArray.push(category);\n          break;\n        }\n      }\n    }\n    return categoriesArray;\n  }\n  return [];\n};\nexport default categoriesReducer;","map":{"version":3,"names":["createSlice","isOutdated","categoriesService","categoriesSlice","name","initialState","entities","isLoading","error","lastFetch","reducers","categoriesRequested","state","categoriesReceived","action","payload","Date","now","categoriesRequestFiled","reducer","categoriesReducer","actions","loadCategoriesList","dispatch","getState","items","content","fetchAll","message","getCategories","categories","getCategoriesLoadingStatus","getCategoriesByIds","categoriesIds","categoriesArray","categoryId","category","_id","push"],"sources":["/Users/dariabrusnitsina/Yandex.Disk.localized/Programming/Projects/react-e-commerce/client/src/store/categories.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport isOutdated from \"../utils/isOutdated\";\nimport categoriesService from \"../services/categories.service\";\n\nconst categoriesSlice = createSlice({\n    name: \"categories\",\n    initialState: {\n        entities: null,\n        isLoading: true,\n        error: null,\n        lastFetch: null\n    },\n    reducers: {\n        categoriesRequested: (state) => {\n            state.isLoading = true;\n        },\n        categoriesReceived: (state, action) => {\n            state.entities = action.payload;\n            state.lastFetch = Date.now();\n            state.isLoading = false;\n        },\n        categoriesRequestFiled: (state, action) => {\n            state.error = action.payload;\n            state.isLoading = false;\n        }\n    }\n});\n\nconst { reducer: categoriesReducer, actions } = categoriesSlice;\nconst { categoriesRequested, categoriesReceived, categoriesRequestFiled } = actions;\n\nexport const loadCategoriesList = () => async (dispatch, getState) => {\n    const { lastFetch } = getState().items;\n    if (isOutdated(lastFetch)) {\n        dispatch(categoriesRequested());\n        try {\n            const { content } = await categoriesService.fetchAll();\n            dispatch(categoriesReceived(content));\n        } catch (error) {\n            dispatch(categoriesRequestFiled(error.message));\n        }\n    }\n};\n\nexport const getCategories= () => (state) => state.categories.entities;\nexport const getCategoriesLoadingStatus = () => (state) =>\n    state.categories.isLoading;\nexport const getCategoriesByIds = (categoriesIds) => (state) => {\n    if (state.categories.entities) {\n        const categoriesArray = [];\n        for (const categoryId of categoriesIds) {\n            for (const category of state.categories.entities) {\n                if (category._id === categoryId) {\n                    categoriesArray.push(category);\n                    break;\n                }\n            }\n        }\n        return categoriesArray;\n    }\n    return [];\n};\n\nexport default categoriesReducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,UAAU,MAAM,qBAAqB;AAC5C,OAAOC,iBAAiB,MAAM,gCAAgC;AAE9D,MAAMC,eAAe,GAAGH,WAAW,CAAC;EAChCI,IAAI,EAAE,YAAY;EAClBC,YAAY,EAAE;IACVC,QAAQ,EAAE,IAAI;IACdC,SAAS,EAAE,IAAI;IACfC,KAAK,EAAE,IAAI;IACXC,SAAS,EAAE;EACf,CAAC;EACDC,QAAQ,EAAE;IACNC,mBAAmB,EAAGC,KAAK,IAAK;MAC5BA,KAAK,CAACL,SAAS,GAAG,IAAI;IAC1B,CAAC;IACDM,kBAAkB,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACnCF,KAAK,CAACN,QAAQ,GAAGQ,MAAM,CAACC,OAAO;MAC/BH,KAAK,CAACH,SAAS,GAAGO,IAAI,CAACC,GAAG,EAAE;MAC5BL,KAAK,CAACL,SAAS,GAAG,KAAK;IAC3B,CAAC;IACDW,sBAAsB,EAAE,CAACN,KAAK,EAAEE,MAAM,KAAK;MACvCF,KAAK,CAACJ,KAAK,GAAGM,MAAM,CAACC,OAAO;MAC5BH,KAAK,CAACL,SAAS,GAAG,KAAK;IAC3B;EACJ;AACJ,CAAC,CAAC;AAEF,MAAM;EAAEY,OAAO,EAAEC,iBAAiB;EAAEC;AAAQ,CAAC,GAAGlB,eAAe;AAC/D,MAAM;EAAEQ,mBAAmB;EAAEE,kBAAkB;EAAEK;AAAuB,CAAC,GAAGG,OAAO;AAEnF,OAAO,MAAMC,kBAAkB,GAAG,MAAM,OAAOC,QAAQ,EAAEC,QAAQ,KAAK;EAClE,MAAM;IAAEf;EAAU,CAAC,GAAGe,QAAQ,EAAE,CAACC,KAAK;EACtC,IAAIxB,UAAU,CAACQ,SAAS,CAAC,EAAE;IACvBc,QAAQ,CAACZ,mBAAmB,EAAE,CAAC;IAC/B,IAAI;MACA,MAAM;QAAEe;MAAQ,CAAC,GAAG,MAAMxB,iBAAiB,CAACyB,QAAQ,EAAE;MACtDJ,QAAQ,CAACV,kBAAkB,CAACa,OAAO,CAAC,CAAC;IACzC,CAAC,CAAC,OAAOlB,KAAK,EAAE;MACZe,QAAQ,CAACL,sBAAsB,CAACV,KAAK,CAACoB,OAAO,CAAC,CAAC;IACnD;EACJ;AACJ,CAAC;AAED,OAAO,MAAMC,aAAa,GAAE,MAAOjB,KAAK,IAAKA,KAAK,CAACkB,UAAU,CAACxB,QAAQ;AACtE,OAAO,MAAMyB,0BAA0B,GAAG,MAAOnB,KAAK,IAClDA,KAAK,CAACkB,UAAU,CAACvB,SAAS;AAC9B,OAAO,MAAMyB,kBAAkB,GAAIC,aAAa,IAAMrB,KAAK,IAAK;EAC5D,IAAIA,KAAK,CAACkB,UAAU,CAACxB,QAAQ,EAAE;IAC3B,MAAM4B,eAAe,GAAG,EAAE;IAC1B,KAAK,MAAMC,UAAU,IAAIF,aAAa,EAAE;MACpC,KAAK,MAAMG,QAAQ,IAAIxB,KAAK,CAACkB,UAAU,CAACxB,QAAQ,EAAE;QAC9C,IAAI8B,QAAQ,CAACC,GAAG,KAAKF,UAAU,EAAE;UAC7BD,eAAe,CAACI,IAAI,CAACF,QAAQ,CAAC;UAC9B;QACJ;MACJ;IACJ;IACA,OAAOF,eAAe;EAC1B;EACA,OAAO,EAAE;AACb,CAAC;AAED,eAAed,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}