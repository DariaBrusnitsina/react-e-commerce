{"ast":null,"code":"import { createAction, createSlice } from \"@reduxjs/toolkit\";\nimport itemsService from \"../services/items.service\";\nimport isOutdated from \"../utils/isOutdated\";\nimport userService from \"../services/user.service\";\nconst itemsSlice = createSlice({\n  name: \"items\",\n  initialState: {\n    entities: null,\n    isLoading: true,\n    error: null,\n    lastFetch: null\n  },\n  reducers: {\n    itemsRequested: state => {\n      state.isLoading = true;\n    },\n    itemsReceived: (state, action) => {\n      state.entities = action.payload;\n      state.lastFetch = Date.now();\n      state.isLoading = false;\n    },\n    itemsRequestFiled: (state, action) => {\n      state.error = action.payload;\n      state.isLoading = false;\n    },\n    itemsUpdateRequest: state => {},\n    itemsUpdateReceived: (state, action) => {\n      const index = state.entities.findIndex(i => i._id === action.payload._id);\n      state.entities[index] = {\n        ...state.entities[index],\n        ...action.payload\n      };\n    },\n    itemsUpdateRequestFailed: (state, action) => {\n      state.error = action.payload;\n    },\n    itemDeleteRequested: state => {},\n    itemDeleted: (state, action) => {\n      state.entities = state.entities.filter(i => i._id !== action.payload);\n    },\n    itemDeleteRequestFailed: (state, action) => {\n      state.error = action.payload;\n    }\n  }\n});\nconst {\n  reducer: itemsReducer,\n  actions\n} = itemsSlice;\nconst {\n  itemsRequested,\n  itemsReceived,\n  itemsRequestFiled,\n  itemsUpdateRequest,\n  itemsUpdateReceived,\n  itemsUpdateRequestFailed,\n  itemDeleteRequested,\n  itemDeleted,\n  itemDeleteRequestFailed\n} = actions;\nexport const loadItemsList = () => async (dispatch, getState) => {\n  const {\n    lastFetch\n  } = getState().items;\n  if (isOutdated(lastFetch)) {\n    dispatch(itemsRequested());\n    try {\n      const {\n        content\n      } = await itemsService.get();\n      dispatch(itemsReceived(content));\n    } catch (error) {\n      dispatch(itemsRequestFiled(error.message));\n    }\n  }\n};\nexport const addItem = newData => async dispatch => {\n  dispatch(itemCreateRequested());\n  try {\n    const {\n      content\n    } = await itemsService.post(newData);\n    dispatch(itemCreateReceived(content));\n  } catch (error) {\n    dispatch(itemCreateRequestFailed(error.message));\n  }\n};\nexport const updateItem = newData => async dispatch => {\n  dispatch(itemsUpdateRequest());\n  try {\n    const {\n      content\n    } = await itemsService.patch(newData);\n    dispatch(itemsUpdateReceived(content));\n  } catch (error) {\n    dispatch(itemsUpdateRequestFailed(error.message));\n  }\n};\nexport const deleteItem = id => async dispatch => {\n  dispatch(itemDeleteRequested());\n  try {\n    await itemsService.delete(id);\n    dispatch(itemDeleted(id));\n  } catch (error) {\n    dispatch(itemDeleteRequestFailed(error.message));\n  }\n};\nexport const getItems = () => state => state.items.entities;\nexport const getItemsLoadingStatus = () => state => state.items.isLoading;\nexport const getItemById = itemId => state => {\n  console.log(state.items);\n  if (state.items.entities) {\n    return state.items.entities.find(u => u._id === itemId);\n  }\n};\nexport const getItemsByIds = itemsIds => state => {\n  if (state.items.entities) {\n    const itemsArray = [];\n    for (const itemId of itemsIds) {\n      for (const item of state.items.entities) {\n        if (item._id === itemId) {\n          itemsArray.push(item);\n          break;\n        }\n      }\n    }\n    return itemsArray;\n  }\n  return [];\n};\nexport default itemsReducer;","map":{"version":3,"names":["createAction","createSlice","itemsService","isOutdated","userService","itemsSlice","name","initialState","entities","isLoading","error","lastFetch","reducers","itemsRequested","state","itemsReceived","action","payload","Date","now","itemsRequestFiled","itemsUpdateRequest","itemsUpdateReceived","index","findIndex","i","_id","itemsUpdateRequestFailed","itemDeleteRequested","itemDeleted","filter","itemDeleteRequestFailed","reducer","itemsReducer","actions","loadItemsList","dispatch","getState","items","content","get","message","addItem","newData","itemCreateRequested","post","itemCreateReceived","itemCreateRequestFailed","updateItem","patch","deleteItem","id","delete","getItems","getItemsLoadingStatus","getItemById","itemId","console","log","find","u","getItemsByIds","itemsIds","itemsArray","item","push"],"sources":["/Users/dariabrusnitsina/Yandex.Disk.localized/Programming/Projects/react-e-commerce/client/src/store/items.js"],"sourcesContent":["import {createAction, createSlice} from \"@reduxjs/toolkit\";\nimport itemsService from \"../services/items.service\";\nimport isOutdated from \"../utils/isOutdated\";\nimport userService from \"../services/user.service\";\n\nconst itemsSlice = createSlice({\n    name: \"items\",\n    initialState: {\n        entities: null,\n        isLoading: true,\n        error: null,\n        lastFetch: null\n    },\n    reducers: {\n        itemsRequested: (state) => {\n            state.isLoading = true;\n        },\n        itemsReceived: (state, action) => {\n            state.entities = action.payload;\n            state.lastFetch = Date.now();\n            state.isLoading = false;\n        },\n        itemsRequestFiled: (state, action) => {\n            state.error = action.payload;\n            state.isLoading = false;\n        },\n        itemsUpdateRequest: (state) => {},\n        itemsUpdateReceived: (state, action) => {\n            const index = state.entities.findIndex(\n                (i) => i._id === action.payload._id\n            );\n            state.entities[index] = { ...state.entities[index], ...action.payload };\n        },\n        itemsUpdateRequestFailed: (state, action) => {\n            state.error = action.payload;\n        },\n        itemDeleteRequested: (state) => {},\n        itemDeleted: (state, action) => {\n            state.entities = state.entities.filter((i) => i._id !== action.payload);\n            },\n        itemDeleteRequestFailed: (state, action) => {\n            state.error = action.payload;\n            },\n    }\n});\n\nconst { reducer: itemsReducer, actions } = itemsSlice;\nconst { itemsRequested,\n    itemsReceived,\n    itemsRequestFiled,\n    itemsUpdateRequest,\n    itemsUpdateReceived,\n    itemsUpdateRequestFailed,\n    itemDeleteRequested,\n    itemDeleted,\n    itemDeleteRequestFailed\n} = actions;\n\nexport const loadItemsList = () => async (dispatch, getState) => {\n    const { lastFetch } = getState().items;\n    if (isOutdated(lastFetch)) {\n        dispatch(itemsRequested());\n        try {\n            const { content } = await itemsService.get();\n            dispatch(itemsReceived(content));\n        } catch (error) {\n            dispatch(itemsRequestFiled(error.message));\n        }\n    }\n};\n\nexport const addItem = (newData) => async (dispatch) => {\n    dispatch(itemCreateRequested());\n    try {\n        const { content } = await itemsService.post(newData);\n        dispatch(itemCreateReceived(content));\n    } catch (error) {\n        dispatch(itemCreateRequestFailed(error.message));\n    }\n};\n\nexport const updateItem = (newData) => async (dispatch) => {\n    dispatch(itemsUpdateRequest());\n    try {\n        const { content } = await itemsService.patch(newData);\n        dispatch(itemsUpdateReceived(content));\n    } catch (error) {\n        dispatch(itemsUpdateRequestFailed(error.message));\n    }\n};\n\nexport const deleteItem = (id) => async (dispatch) => {\n    dispatch(itemDeleteRequested());\n    try {\n        await itemsService.delete(id);\n        dispatch(itemDeleted(id));\n    } catch (error) {\n        dispatch(itemDeleteRequestFailed(error.message));\n    }\n};\n\nexport const getItems = () => (state) => state.items.entities;\nexport const getItemsLoadingStatus = () => (state) =>\n    state.items.isLoading;\n\nexport const getItemById = (itemId) => (state) => {\n    console.log(state.items)\n    if (state.items.entities) {\n        return state.items.entities.find((u) => u._id === itemId);\n    }\n};\n\nexport const getItemsByIds = (itemsIds) => (state) => {\n    if (state.items.entities) {\n        const itemsArray = [];\n        for (const itemId of itemsIds) {\n            for (const item of state.items.entities) {\n                if (item._id === itemId) {\n                    itemsArray.push(item);\n                    break;\n                }\n            }\n        }\n        return itemsArray;\n    }\n    return [];\n};\n\nexport default itemsReducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}