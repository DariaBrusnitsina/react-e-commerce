{"ast":null,"code":"var _jsxFileName = \"/Users/dariabrusnitsina/Yandex.Disk.localized/Programming/Projects/react-e-commerce/client/src/components/ui/TextInput.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useField } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextField = props => {\n  _s();\n  const [field, meta] = useField(props);\n  const [showPassword, setShowPassword] = useState(false);\n  const displayError = meta.touched && meta.error;\n  const errorStyle = \"absolute text-slate-500 ring-blue-700 ring-opacity-5 appearance-none rounded block w-full   sm:text-sm -bottom-6 \";\n  const getInputClasses = () => {\n    return \"w-full py-2 rounded text-sm dark:bg-gray-700 h-12 focus:outline-none bg-white ring-1 ring-slate-900/10 hover:ring-slate-300 focus:outline-none focus:ring-2 focus:ring-sky-500 shadow-sm rounded-lg text-slate-400 pr-2 \" + (props.icon ? \"pl-3 xs:pl-12\" : \"pl-3\") + (displayError ? \" ring-1 ring-blue-700 focus:border-blue-700 focus:ring-blue-700 focus:\" : \"\");\n  };\n  const toggleShowPassword = () => {\n    setShowPassword(prevState => !prevState);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"my-3 form-outline form-white relative \",\n    children: [props.label && /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.name,\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative text-slate-500\",\n      children: [props.icon && /*#__PURE__*/_jsxDEV(props.icon, {\n        className: \"h-6 w-6 absolute z-10 inset-y-3 left-4 hidden xs:inline-block \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: props.label,\n        id: props.name,\n        ...field,\n        ...props,\n        type: showPassword ? \"text\" : props.type,\n        className: getInputClasses()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), props.type === \"password\" && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"absolute inset-y-0.5 right-2.5 btn btn-outline-secondary text-slate-500\",\n        type: \"button\",\n        onClick: toggleShowPassword,\n        children: showPassword ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"f\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"f\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), displayError ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: errorStyle + \"text-end\",\n        children: meta.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(TextField, \"TryYBA5w6C46gclma9QM38Nb1b8=\", false, function () {\n  return [useField];\n});\n_c = TextField;\nTextField.defaultProps = {\n  type: \"text\"\n};\nexport default TextField;\nvar _c;\n$RefreshReg$(_c, \"TextField\");","map":{"version":3,"names":["React","useState","useField","TextField","props","field","meta","showPassword","setShowPassword","displayError","touched","error","errorStyle","getInputClasses","icon","toggleShowPassword","prevState","label","name","type","defaultProps"],"sources":["/Users/dariabrusnitsina/Yandex.Disk.localized/Programming/Projects/react-e-commerce/client/src/components/ui/TextInput.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useField } from \"formik\";\n\nconst TextField = (props) => {\n    const [field, meta] = useField(props);\n    const [showPassword, setShowPassword] = useState(false);\n    const displayError = meta.touched && meta.error;\n    const errorStyle =\n        \"absolute text-slate-500 ring-blue-700 ring-opacity-5 appearance-none rounded block w-full   sm:text-sm -bottom-6 \";\n\n    const getInputClasses = () => {\n        return (\n            \"w-full py-2 rounded text-sm dark:bg-gray-700 h-12 focus:outline-none bg-white ring-1 ring-slate-900/10 hover:ring-slate-300 focus:outline-none focus:ring-2 focus:ring-sky-500 shadow-sm rounded-lg text-slate-400 pr-2 \" +\n            (props.icon ? \"pl-3 xs:pl-12\" : \"pl-3\") +\n            (displayError\n                ? \" ring-1 ring-blue-700 focus:border-blue-700 focus:ring-blue-700 focus:\"\n                : \"\")\n        );\n    };\n\n    const toggleShowPassword = () => {\n        setShowPassword((prevState) => !prevState);\n    };\n\n    return (\n        <div className='my-3 form-outline form-white relative '>\n            {props.label && <label htmlFor={props.name}>{props.label}</label>}\n            <div className='relative text-slate-500'>\n                {props.icon && (\n                    <props.icon className='h-6 w-6 absolute z-10 inset-y-3 left-4 hidden xs:inline-block ' />\n                )}\n                <input\n                    placeholder={props.label}\n                    id={props.name}\n                    {...field}\n                    {...props}\n                    type={showPassword ? \"text\" : props.type}\n                    className={getInputClasses()}\n                />\n\n                {props.type === \"password\" && (\n                    <button\n                        className='absolute inset-y-0.5 right-2.5 btn btn-outline-secondary text-slate-500'\n                        type='button'\n                        onClick={toggleShowPassword}\n                    >\n                        {showPassword ? (\n                            <p>f</p>\n                        ) : (\n                            <p>f</p>\n                        )}\n                    </button>\n                )}\n                {displayError ? (\n                    <div className={errorStyle + \"text-end\"}>{meta.error}</div>\n                ) : null}\n            </div>\n        </div>\n    );\n};\nTextField.defaultProps = {\n    type: \"text\",\n};\nexport default TextField;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ,QAAQ,QAAQ;AAAC;AAElC,MAAMC,SAAS,GAAIC,KAAK,IAAK;EAAA;EACzB,MAAM,CAACC,KAAK,EAAEC,IAAI,CAAC,GAAGJ,QAAQ,CAACE,KAAK,CAAC;EACrC,MAAM,CAACG,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAMQ,YAAY,GAAGH,IAAI,CAACI,OAAO,IAAIJ,IAAI,CAACK,KAAK;EAC/C,MAAMC,UAAU,GACZ,mHAAmH;EAEvH,MAAMC,eAAe,GAAG,MAAM;IAC1B,OACI,0NAA0N,IACzNT,KAAK,CAACU,IAAI,GAAG,eAAe,GAAG,MAAM,CAAC,IACtCL,YAAY,GACP,wEAAwE,GACxE,EAAE,CAAC;EAEjB,CAAC;EAED,MAAMM,kBAAkB,GAAG,MAAM;IAC7BP,eAAe,CAAEQ,SAAS,IAAK,CAACA,SAAS,CAAC;EAC9C,CAAC;EAED,oBACI;IAAK,SAAS,EAAC,wCAAwC;IAAA,WAClDZ,KAAK,CAACa,KAAK,iBAAI;MAAO,OAAO,EAAEb,KAAK,CAACc,IAAK;MAAA,UAAEd,KAAK,CAACa;IAAK;MAAA;MAAA;MAAA;IAAA,QAAS,eACjE;MAAK,SAAS,EAAC,yBAAyB;MAAA,WACnCb,KAAK,CAACU,IAAI,iBACP,QAAC,KAAK,CAAC,IAAI;QAAC,SAAS,EAAC;MAAgE;QAAA;QAAA;QAAA;MAAA,QACzF,eACD;QACI,WAAW,EAAEV,KAAK,CAACa,KAAM;QACzB,EAAE,EAAEb,KAAK,CAACc,IAAK;QAAA,GACXb,KAAK;QAAA,GACLD,KAAK;QACT,IAAI,EAAEG,YAAY,GAAG,MAAM,GAAGH,KAAK,CAACe,IAAK;QACzC,SAAS,EAAEN,eAAe;MAAG;QAAA;QAAA;QAAA;MAAA,QAC/B,EAEDT,KAAK,CAACe,IAAI,KAAK,UAAU,iBACtB;QACI,SAAS,EAAC,yEAAyE;QACnF,IAAI,EAAC,QAAQ;QACb,OAAO,EAAEJ,kBAAmB;QAAA,UAE3BR,YAAY,gBACT;UAAA,UAAG;QAAC;UAAA;UAAA;UAAA;QAAA,QAAI,gBAER;UAAA,UAAG;QAAC;UAAA;UAAA;UAAA;QAAA;MACP;QAAA;QAAA;QAAA;MAAA,QAER,EACAE,YAAY,gBACT;QAAK,SAAS,EAAEG,UAAU,GAAG,UAAW;QAAA,UAAEN,IAAI,CAACK;MAAK;QAAA;QAAA;QAAA;MAAA,QAAO,GAC3D,IAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QACN;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC;AAAC,GAxDIR,SAAS;EAAA,QACWD,QAAQ;AAAA;AAAA,KAD5BC,SAAS;AAyDfA,SAAS,CAACiB,YAAY,GAAG;EACrBD,IAAI,EAAE;AACV,CAAC;AACD,eAAehB,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}