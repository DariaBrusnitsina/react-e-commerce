{"ast":null,"code":"import { createAction, createSlice } from \"@reduxjs/toolkit\";\nimport userService from \"../services/user.service\";\nimport authService from \"../services/auth.service\";\nimport localStorageService from \"../services/localStorage.service\";\nimport history from \"../utils/history\";\nimport generateAuthError from \"../utils/generateAuthError\";\nconst initialState = localStorageService.getAccessToken() ? {\n  entities: null,\n  isLoading: true,\n  error: null,\n  auth: {\n    userId: localStorageService.getUserId()\n  },\n  isLoggedIn: true,\n  dataLoaded: false\n} : {\n  entities: null,\n  isLoading: false,\n  error: null,\n  auth: null,\n  isLoggedIn: false,\n  dataLoaded: false\n};\nconsole.log(initialState);\nconst usersSlice = createSlice({\n  name: \"users\",\n  initialState,\n  reducers: {\n    usersRequested: state => {\n      state.isLoading = true;\n    },\n    usersReceived: (state, action) => {\n      state.entities = action.payload;\n      state.dataLoaded = true;\n      state.isLoading = false;\n    },\n    usersRequestFailed: (state, action) => {\n      state.error = action.payload;\n      state.isLoading = false;\n    },\n    authRequestSuccess: (state, action) => {\n      state.auth = action.payload;\n      state.isLoggedIn = true;\n    },\n    authRequestFailed: (state, action) => {\n      state.error = action.payload;\n    },\n    userCreated: (state, action) => {\n      if (!Array.isArray(state.entities)) {\n        state.entities = [];\n      }\n      state.entities.push(action.payload);\n    },\n    userLoggedOut: state => {\n      state.entities = null;\n      state.isLoggedIn = false;\n      state.auth = null;\n      state.dataLoaded = false;\n    },\n    userUpdateSuccessed: (state, action) => {\n      state.entities[state.entities.findIndex(u => u._id === action.payload._id)] = action.payload;\n    },\n    authRequested: state => {\n      state.error = null;\n    }\n  }\n});\nconst {\n  reducer: usersReducer,\n  actions\n} = usersSlice;\nconst {\n  usersRequested,\n  usersReceived,\n  usersRequestFailed,\n  authRequestSuccess,\n  authRequestFailed,\n  userCreated,\n  userLoggedOut,\n  userUpdateSuccessed\n} = actions;\nconst authRequested = createAction(\"users/authRequested\");\nconst userCreateRequested = createAction(\"users/userCreateRequested\");\nconst createUserFailed = createAction(\"users/createUserFailed\");\nconst userUpdateRequested = createAction(\"users/userUpdateRequested\");\nconst userUpdateFailed = createAction(\"users/userUpdateFailed\");\nexport const login = _ref => {\n  let {\n    payload,\n    redirect\n  } = _ref;\n  return async dispatch => {\n    const {\n      email,\n      password\n    } = payload;\n    dispatch(authRequested());\n    try {\n      const data = await authService.login({\n        email,\n        password\n      });\n      dispatch(authRequestSuccess({\n        userId: data.localId\n      }));\n      localStorageService.setTokens(data);\n      history.push(redirect);\n    } catch (error) {\n      const {\n        code,\n        message\n      } = error.response.data.error;\n      if (code === 400) {\n        const errorMessage = generateAuthError(message);\n        dispatch(authRequestFailed(errorMessage));\n      } else {\n        dispatch(authRequestFailed(error.message));\n      }\n    }\n  };\n};\nexport const signUp = _ref2 => {\n  let {\n    email,\n    password,\n    ...rest\n  } = _ref2;\n  return async dispatch => {\n    dispatch(authRequested());\n    try {\n      const data = await authService.register({\n        email,\n        password\n      });\n      localStorageService.setTokens(data);\n      dispatch(authRequestSuccess({\n        userId: data.localId\n      }));\n      dispatch(createUser({\n        _id: data.localId,\n        sale: 0,\n        orders: 0,\n        ...rest\n      }));\n    } catch (error) {\n      dispatch(authRequestFailed(error.message));\n    }\n  };\n};\nexport const logOut = () => dispatch => {\n  localStorageService.removeAuthData();\n  dispatch(userLoggedOut());\n  history.push(\"/\");\n};\nexport const updateUserData = payload => async dispatch => {\n  dispatch(userUpdateRequested());\n  try {\n    const {\n      content\n    } = await userService.update(payload);\n    dispatch(userUpdateSuccessed(content));\n    history.push(`/users/${content._id}`);\n  } catch (error) {\n    dispatch(userUpdateFailed(error.message));\n  }\n};\nfunction createUser(payload) {\n  return async function (dispatch) {\n    dispatch(userCreateRequested());\n    try {\n      const {\n        content\n      } = await userService.create(payload);\n      dispatch(userCreated(content));\n      history.push(\"/users\");\n    } catch (error) {\n      dispatch(createUserFailed(error.message));\n    }\n  };\n}\nexport const loadUsersList = () => async (dispatch, getState) => {\n  dispatch(usersRequested());\n  try {\n    const {\n      content\n    } = await userService.get();\n    dispatch(usersReceived(content));\n  } catch (error) {\n    dispatch(usersRequestFailed(error.message));\n  }\n};\nexport const getUsersList = () => state => state.users.entities;\nexport const getCurrentUserData = () => state => {\n  return state.users.entities ? state.users.entities.find(u => u._id === state.users.auth.userId) : null;\n};\nexport const getUserById = userId => state => {\n  if (state.users.entities) {\n    return state.users.entities.find(u => u._id === userId);\n  }\n};\nexport const getIsLoggedIn = () => state => state.users.isLoggedIn;\nexport const getDataStatus = () => state => state.users.dataLoaded;\nexport const getUsersLoadingStatus = () => state => state.users.isLoading;\nexport const getCurrentUserId = () => state => state.users.auth.userId;\nexport const getAuthError = () => state => state.users.error;\nexport default usersReducer;","map":{"version":3,"names":["createAction","createSlice","userService","authService","localStorageService","history","generateAuthError","initialState","getAccessToken","entities","isLoading","error","auth","userId","getUserId","isLoggedIn","dataLoaded","console","log","usersSlice","name","reducers","usersRequested","state","usersReceived","action","payload","usersRequestFailed","authRequestSuccess","authRequestFailed","userCreated","Array","isArray","push","userLoggedOut","userUpdateSuccessed","findIndex","u","_id","authRequested","reducer","usersReducer","actions","userCreateRequested","createUserFailed","userUpdateRequested","userUpdateFailed","login","redirect","dispatch","email","password","data","localId","setTokens","code","message","response","errorMessage","signUp","rest","register","createUser","sale","orders","logOut","removeAuthData","updateUserData","content","update","create","loadUsersList","getState","get","getUsersList","users","getCurrentUserData","find","getUserById","getIsLoggedIn","getDataStatus","getUsersLoadingStatus","getCurrentUserId","getAuthError"],"sources":["/Users/dariabrusnitsina/Yandex.Disk.localized/Programming/Projects/react-e-commerce/client/src/store/users.js"],"sourcesContent":["import { createAction, createSlice } from \"@reduxjs/toolkit\";\nimport userService from \"../services/user.service\";\nimport authService from \"../services/auth.service\";\nimport localStorageService from \"../services/localStorage.service\";\nimport history from \"../utils/history\";\nimport generateAuthError from \"../utils/generateAuthError\";\n\n\nconst initialState = localStorageService.getAccessToken()\n    ? {\n        entities: null,\n        isLoading: true,\n        error: null,\n        auth: { userId: localStorageService.getUserId() },\n        isLoggedIn: true,\n        dataLoaded: false\n    }\n    : {\n        entities: null,\n        isLoading: false,\n        error: null,\n        auth: null,\n        isLoggedIn: false,\n        dataLoaded: false\n    };\n\nconsole.log(initialState)\n\nconst usersSlice = createSlice({\n    name: \"users\",\n    initialState,\n    reducers: {\n        usersRequested: (state) => {\n            state.isLoading = true;\n        },\n        usersReceived: (state, action) => {\n            state.entities = action.payload;\n            state.dataLoaded = true;\n            state.isLoading = false;\n        },\n        usersRequestFailed: (state, action) => {\n            state.error = action.payload;\n            state.isLoading = false;\n        },\n        authRequestSuccess: (state, action) => {\n            state.auth = action.payload;\n            state.isLoggedIn = true;\n        },\n        authRequestFailed: (state, action) => {\n            state.error = action.payload;\n        },\n        userCreated: (state, action) => {\n            if (!Array.isArray(state.entities)) {\n                state.entities = [];\n            }\n            state.entities.push(action.payload);\n        },\n        userLoggedOut: (state) => {\n            state.entities = null;\n            state.isLoggedIn = false;\n            state.auth = null;\n            state.dataLoaded = false;\n        },\n        userUpdateSuccessed: (state, action) => {\n            state.entities[\n                state.entities.findIndex((u) => u._id === action.payload._id)\n                ] = action.payload;\n        },\n        authRequested: (state) => {\n            state.error = null;\n        }\n    }\n});\n\nconst { reducer: usersReducer, actions } = usersSlice;\nconst {\n    usersRequested,\n    usersReceived,\n    usersRequestFailed,\n    authRequestSuccess,\n    authRequestFailed,\n    userCreated,\n    userLoggedOut,\n    userUpdateSuccessed\n} = actions;\n\nconst authRequested = createAction(\"users/authRequested\");\nconst userCreateRequested = createAction(\"users/userCreateRequested\");\nconst createUserFailed = createAction(\"users/createUserFailed\");\nconst userUpdateRequested = createAction(\"users/userUpdateRequested\");\nconst userUpdateFailed = createAction(\"users/userUpdateFailed\");\n\nexport const login =\n    ({ payload, redirect }) =>\n        async (dispatch) => {\n            const { email, password } = payload;\n            dispatch(authRequested());\n            try {\n                const data = await authService.login({ email, password });\n                dispatch(authRequestSuccess({ userId: data.localId }));\n                localStorageService.setTokens(data);\n                history.push(redirect);\n            } catch (error) {\n                const { code, message } = error.response.data.error;\n                if (code === 400) {\n                    const errorMessage = generateAuthError(message);\n                    dispatch(authRequestFailed(errorMessage));\n                } else {\n                    dispatch(authRequestFailed(error.message));\n                }\n            }\n        };\n\nexport const signUp =\n    ({ email, password, ...rest }) =>\n        async (dispatch) => {\n            dispatch(authRequested());\n            try {\n                const data = await authService.register({ email, password });\n                localStorageService.setTokens(data);\n                dispatch(authRequestSuccess({ userId: data.localId }));\n                dispatch(\n                    createUser({\n                        _id: data.localId,\n                        sale: 0,\n                        orders: 0,\n                        ...rest\n                    })\n                );\n            } catch (error) {\n                dispatch(authRequestFailed(error.message));\n            }\n        };\nexport const logOut = () => (dispatch) => {\n    localStorageService.removeAuthData();\n    dispatch(userLoggedOut());\n    history.push(\"/\");\n};\n\nexport const updateUserData = (payload) => async (dispatch) => {\n    dispatch(userUpdateRequested());\n    try {\n        const { content } = await userService.update(payload);\n        dispatch(userUpdateSuccessed(content));\n        history.push(`/users/${content._id}`);\n    } catch (error) {\n        dispatch(userUpdateFailed(error.message));\n    }\n};\n\nfunction createUser(payload) {\n    return async function (dispatch) {\n        dispatch(userCreateRequested());\n        try {\n            const { content } = await userService.create(payload);\n            dispatch(userCreated(content));\n            history.push(\"/users\");\n        } catch (error) {\n            dispatch(createUserFailed(error.message));\n        }\n    };\n}\n\nexport const loadUsersList = () => async (dispatch, getState) => {\n    dispatch(usersRequested());\n    try {\n        const { content } = await userService.get();\n        dispatch(usersReceived(content));\n    } catch (error) {\n        dispatch(usersRequestFailed(error.message));\n    }\n};\n\nexport const getUsersList = () => (state) => state.users.entities;\nexport const getCurrentUserData = () => (state) => {\n    return state.users.entities\n        ? state.users.entities.find((u) => u._id === state.users.auth.userId)\n        : null;\n};\nexport const getUserById = (userId) => (state) => {\n    if (state.users.entities) {\n        return state.users.entities.find((u) => u._id === userId);\n    }\n};\n\nexport const getIsLoggedIn = () => (state) => state.users.isLoggedIn;\nexport const getDataStatus = () => (state) => state.users.dataLoaded;\nexport const getUsersLoadingStatus = () => (state) => state.users.isLoading;\nexport const getCurrentUserId = () => (state) => state.users.auth.userId;\nexport const getAuthError = () => (state) => state.users.error;\n\nexport default usersReducer;\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,WAAW,QAAQ,kBAAkB;AAC5D,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,mBAAmB,MAAM,kCAAkC;AAClE,OAAOC,OAAO,MAAM,kBAAkB;AACtC,OAAOC,iBAAiB,MAAM,4BAA4B;AAG1D,MAAMC,YAAY,GAAGH,mBAAmB,CAACI,cAAc,EAAE,GACnD;EACEC,QAAQ,EAAE,IAAI;EACdC,SAAS,EAAE,IAAI;EACfC,KAAK,EAAE,IAAI;EACXC,IAAI,EAAE;IAAEC,MAAM,EAAET,mBAAmB,CAACU,SAAS;EAAG,CAAC;EACjDC,UAAU,EAAE,IAAI;EAChBC,UAAU,EAAE;AAChB,CAAC,GACC;EACEP,QAAQ,EAAE,IAAI;EACdC,SAAS,EAAE,KAAK;EAChBC,KAAK,EAAE,IAAI;EACXC,IAAI,EAAE,IAAI;EACVG,UAAU,EAAE,KAAK;EACjBC,UAAU,EAAE;AAChB,CAAC;AAELC,OAAO,CAACC,GAAG,CAACX,YAAY,CAAC;AAEzB,MAAMY,UAAU,GAAGlB,WAAW,CAAC;EAC3BmB,IAAI,EAAE,OAAO;EACbb,YAAY;EACZc,QAAQ,EAAE;IACNC,cAAc,EAAGC,KAAK,IAAK;MACvBA,KAAK,CAACb,SAAS,GAAG,IAAI;IAC1B,CAAC;IACDc,aAAa,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC9BF,KAAK,CAACd,QAAQ,GAAGgB,MAAM,CAACC,OAAO;MAC/BH,KAAK,CAACP,UAAU,GAAG,IAAI;MACvBO,KAAK,CAACb,SAAS,GAAG,KAAK;IAC3B,CAAC;IACDiB,kBAAkB,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MACnCF,KAAK,CAACZ,KAAK,GAAGc,MAAM,CAACC,OAAO;MAC5BH,KAAK,CAACb,SAAS,GAAG,KAAK;IAC3B,CAAC;IACDkB,kBAAkB,EAAE,CAACL,KAAK,EAAEE,MAAM,KAAK;MACnCF,KAAK,CAACX,IAAI,GAAGa,MAAM,CAACC,OAAO;MAC3BH,KAAK,CAACR,UAAU,GAAG,IAAI;IAC3B,CAAC;IACDc,iBAAiB,EAAE,CAACN,KAAK,EAAEE,MAAM,KAAK;MAClCF,KAAK,CAACZ,KAAK,GAAGc,MAAM,CAACC,OAAO;IAChC,CAAC;IACDI,WAAW,EAAE,CAACP,KAAK,EAAEE,MAAM,KAAK;MAC5B,IAAI,CAACM,KAAK,CAACC,OAAO,CAACT,KAAK,CAACd,QAAQ,CAAC,EAAE;QAChCc,KAAK,CAACd,QAAQ,GAAG,EAAE;MACvB;MACAc,KAAK,CAACd,QAAQ,CAACwB,IAAI,CAACR,MAAM,CAACC,OAAO,CAAC;IACvC,CAAC;IACDQ,aAAa,EAAGX,KAAK,IAAK;MACtBA,KAAK,CAACd,QAAQ,GAAG,IAAI;MACrBc,KAAK,CAACR,UAAU,GAAG,KAAK;MACxBQ,KAAK,CAACX,IAAI,GAAG,IAAI;MACjBW,KAAK,CAACP,UAAU,GAAG,KAAK;IAC5B,CAAC;IACDmB,mBAAmB,EAAE,CAACZ,KAAK,EAAEE,MAAM,KAAK;MACpCF,KAAK,CAACd,QAAQ,CACVc,KAAK,CAACd,QAAQ,CAAC2B,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAACC,GAAG,KAAKb,MAAM,CAACC,OAAO,CAACY,GAAG,CAAC,CAC5D,GAAGb,MAAM,CAACC,OAAO;IAC1B,CAAC;IACDa,aAAa,EAAGhB,KAAK,IAAK;MACtBA,KAAK,CAACZ,KAAK,GAAG,IAAI;IACtB;EACJ;AACJ,CAAC,CAAC;AAEF,MAAM;EAAE6B,OAAO,EAAEC,YAAY;EAAEC;AAAQ,CAAC,GAAGvB,UAAU;AACrD,MAAM;EACFG,cAAc;EACdE,aAAa;EACbG,kBAAkB;EAClBC,kBAAkB;EAClBC,iBAAiB;EACjBC,WAAW;EACXI,aAAa;EACbC;AACJ,CAAC,GAAGO,OAAO;AAEX,MAAMH,aAAa,GAAGvC,YAAY,CAAC,qBAAqB,CAAC;AACzD,MAAM2C,mBAAmB,GAAG3C,YAAY,CAAC,2BAA2B,CAAC;AACrE,MAAM4C,gBAAgB,GAAG5C,YAAY,CAAC,wBAAwB,CAAC;AAC/D,MAAM6C,mBAAmB,GAAG7C,YAAY,CAAC,2BAA2B,CAAC;AACrE,MAAM8C,gBAAgB,GAAG9C,YAAY,CAAC,wBAAwB,CAAC;AAE/D,OAAO,MAAM+C,KAAK,GACd;EAAA,IAAC;IAAErB,OAAO;IAAEsB;EAAS,CAAC;EAAA,OAClB,MAAOC,QAAQ,IAAK;IAChB,MAAM;MAAEC,KAAK;MAAEC;IAAS,CAAC,GAAGzB,OAAO;IACnCuB,QAAQ,CAACV,aAAa,EAAE,CAAC;IACzB,IAAI;MACA,MAAMa,IAAI,GAAG,MAAMjD,WAAW,CAAC4C,KAAK,CAAC;QAAEG,KAAK;QAAEC;MAAS,CAAC,CAAC;MACzDF,QAAQ,CAACrB,kBAAkB,CAAC;QAAEf,MAAM,EAAEuC,IAAI,CAACC;MAAQ,CAAC,CAAC,CAAC;MACtDjD,mBAAmB,CAACkD,SAAS,CAACF,IAAI,CAAC;MACnC/C,OAAO,CAAC4B,IAAI,CAACe,QAAQ,CAAC;IAC1B,CAAC,CAAC,OAAOrC,KAAK,EAAE;MACZ,MAAM;QAAE4C,IAAI;QAAEC;MAAQ,CAAC,GAAG7C,KAAK,CAAC8C,QAAQ,CAACL,IAAI,CAACzC,KAAK;MACnD,IAAI4C,IAAI,KAAK,GAAG,EAAE;QACd,MAAMG,YAAY,GAAGpD,iBAAiB,CAACkD,OAAO,CAAC;QAC/CP,QAAQ,CAACpB,iBAAiB,CAAC6B,YAAY,CAAC,CAAC;MAC7C,CAAC,MAAM;QACHT,QAAQ,CAACpB,iBAAiB,CAAClB,KAAK,CAAC6C,OAAO,CAAC,CAAC;MAC9C;IACJ;EACJ,CAAC;AAAA;AAET,OAAO,MAAMG,MAAM,GACf;EAAA,IAAC;IAAET,KAAK;IAAEC,QAAQ;IAAE,GAAGS;EAAK,CAAC;EAAA,OACzB,MAAOX,QAAQ,IAAK;IAChBA,QAAQ,CAACV,aAAa,EAAE,CAAC;IACzB,IAAI;MACA,MAAMa,IAAI,GAAG,MAAMjD,WAAW,CAAC0D,QAAQ,CAAC;QAAEX,KAAK;QAAEC;MAAS,CAAC,CAAC;MAC5D/C,mBAAmB,CAACkD,SAAS,CAACF,IAAI,CAAC;MACnCH,QAAQ,CAACrB,kBAAkB,CAAC;QAAEf,MAAM,EAAEuC,IAAI,CAACC;MAAQ,CAAC,CAAC,CAAC;MACtDJ,QAAQ,CACJa,UAAU,CAAC;QACPxB,GAAG,EAAEc,IAAI,CAACC,OAAO;QACjBU,IAAI,EAAE,CAAC;QACPC,MAAM,EAAE,CAAC;QACT,GAAGJ;MACP,CAAC,CAAC,CACL;IACL,CAAC,CAAC,OAAOjD,KAAK,EAAE;MACZsC,QAAQ,CAACpB,iBAAiB,CAAClB,KAAK,CAAC6C,OAAO,CAAC,CAAC;IAC9C;EACJ,CAAC;AAAA;AACT,OAAO,MAAMS,MAAM,GAAG,MAAOhB,QAAQ,IAAK;EACtC7C,mBAAmB,CAAC8D,cAAc,EAAE;EACpCjB,QAAQ,CAACf,aAAa,EAAE,CAAC;EACzB7B,OAAO,CAAC4B,IAAI,CAAC,GAAG,CAAC;AACrB,CAAC;AAED,OAAO,MAAMkC,cAAc,GAAIzC,OAAO,IAAK,MAAOuB,QAAQ,IAAK;EAC3DA,QAAQ,CAACJ,mBAAmB,EAAE,CAAC;EAC/B,IAAI;IACA,MAAM;MAAEuB;IAAQ,CAAC,GAAG,MAAMlE,WAAW,CAACmE,MAAM,CAAC3C,OAAO,CAAC;IACrDuB,QAAQ,CAACd,mBAAmB,CAACiC,OAAO,CAAC,CAAC;IACtC/D,OAAO,CAAC4B,IAAI,CAAE,UAASmC,OAAO,CAAC9B,GAAI,EAAC,CAAC;EACzC,CAAC,CAAC,OAAO3B,KAAK,EAAE;IACZsC,QAAQ,CAACH,gBAAgB,CAACnC,KAAK,CAAC6C,OAAO,CAAC,CAAC;EAC7C;AACJ,CAAC;AAED,SAASM,UAAU,CAACpC,OAAO,EAAE;EACzB,OAAO,gBAAgBuB,QAAQ,EAAE;IAC7BA,QAAQ,CAACN,mBAAmB,EAAE,CAAC;IAC/B,IAAI;MACA,MAAM;QAAEyB;MAAQ,CAAC,GAAG,MAAMlE,WAAW,CAACoE,MAAM,CAAC5C,OAAO,CAAC;MACrDuB,QAAQ,CAACnB,WAAW,CAACsC,OAAO,CAAC,CAAC;MAC9B/D,OAAO,CAAC4B,IAAI,CAAC,QAAQ,CAAC;IAC1B,CAAC,CAAC,OAAOtB,KAAK,EAAE;MACZsC,QAAQ,CAACL,gBAAgB,CAACjC,KAAK,CAAC6C,OAAO,CAAC,CAAC;IAC7C;EACJ,CAAC;AACL;AAEA,OAAO,MAAMe,aAAa,GAAG,MAAM,OAAOtB,QAAQ,EAAEuB,QAAQ,KAAK;EAC7DvB,QAAQ,CAAC3B,cAAc,EAAE,CAAC;EAC1B,IAAI;IACA,MAAM;MAAE8C;IAAQ,CAAC,GAAG,MAAMlE,WAAW,CAACuE,GAAG,EAAE;IAC3CxB,QAAQ,CAACzB,aAAa,CAAC4C,OAAO,CAAC,CAAC;EACpC,CAAC,CAAC,OAAOzD,KAAK,EAAE;IACZsC,QAAQ,CAACtB,kBAAkB,CAAChB,KAAK,CAAC6C,OAAO,CAAC,CAAC;EAC/C;AACJ,CAAC;AAED,OAAO,MAAMkB,YAAY,GAAG,MAAOnD,KAAK,IAAKA,KAAK,CAACoD,KAAK,CAAClE,QAAQ;AACjE,OAAO,MAAMmE,kBAAkB,GAAG,MAAOrD,KAAK,IAAK;EAC/C,OAAOA,KAAK,CAACoD,KAAK,CAAClE,QAAQ,GACrBc,KAAK,CAACoD,KAAK,CAAClE,QAAQ,CAACoE,IAAI,CAAExC,CAAC,IAAKA,CAAC,CAACC,GAAG,KAAKf,KAAK,CAACoD,KAAK,CAAC/D,IAAI,CAACC,MAAM,CAAC,GACnE,IAAI;AACd,CAAC;AACD,OAAO,MAAMiE,WAAW,GAAIjE,MAAM,IAAMU,KAAK,IAAK;EAC9C,IAAIA,KAAK,CAACoD,KAAK,CAAClE,QAAQ,EAAE;IACtB,OAAOc,KAAK,CAACoD,KAAK,CAAClE,QAAQ,CAACoE,IAAI,CAAExC,CAAC,IAAKA,CAAC,CAACC,GAAG,KAAKzB,MAAM,CAAC;EAC7D;AACJ,CAAC;AAED,OAAO,MAAMkE,aAAa,GAAG,MAAOxD,KAAK,IAAKA,KAAK,CAACoD,KAAK,CAAC5D,UAAU;AACpE,OAAO,MAAMiE,aAAa,GAAG,MAAOzD,KAAK,IAAKA,KAAK,CAACoD,KAAK,CAAC3D,UAAU;AACpE,OAAO,MAAMiE,qBAAqB,GAAG,MAAO1D,KAAK,IAAKA,KAAK,CAACoD,KAAK,CAACjE,SAAS;AAC3E,OAAO,MAAMwE,gBAAgB,GAAG,MAAO3D,KAAK,IAAKA,KAAK,CAACoD,KAAK,CAAC/D,IAAI,CAACC,MAAM;AACxE,OAAO,MAAMsE,YAAY,GAAG,MAAO5D,KAAK,IAAKA,KAAK,CAACoD,KAAK,CAAChE,KAAK;AAE9D,eAAe8B,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}