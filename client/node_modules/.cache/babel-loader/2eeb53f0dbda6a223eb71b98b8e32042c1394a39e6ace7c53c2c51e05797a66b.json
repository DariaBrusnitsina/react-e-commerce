{"ast":null,"code":"var _jsxFileName = \"/Users/dariabrusnitsina/Yandex.Disk.localized/Programming/Projects/react-e-commerce/client/src/components/common/form/radioField.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RadioField = _ref => {\n  let {\n    options,\n    name,\n    onChange,\n    value,\n    label\n  } = _ref;\n  const handleChange = _ref2 => {\n    let {\n      target\n    } = _ref2;\n    onChange({\n      name: target.name,\n      value: target.value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"form-label\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: options.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-check form-check-inline\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-check-input\",\n          type: \"radio\",\n          name: name,\n          id: option.name + \"_\" + option.value,\n          checked: option.value === value,\n          value: option.value,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-check-label\",\n          htmlFor: option.name + \"_\" + option.value,\n          children: option.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this)]\n      }, option.name + \"_\" + option.value, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n_c = RadioField;\nRadioField.propTypes = {\n  options: PropTypes.array,\n  name: PropTypes.string,\n  onChange: PropTypes.func,\n  value: PropTypes.string,\n  label: PropTypes.string\n};\nexport default RadioField;\nvar _c;\n$RefreshReg$(_c, \"RadioField\");","map":{"version":3,"names":["React","PropTypes","RadioField","options","name","onChange","value","label","handleChange","target","map","option","propTypes","array","string","func"],"sources":["/Users/dariabrusnitsina/Yandex.Disk.localized/Programming/Projects/react-e-commerce/client/src/components/common/form/radioField.jsx"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst RadioField = ({ options, name, onChange, value, label }) => {\n    const handleChange = ({ target }) => {\n        onChange({ name: target.name, value: target.value });\n    };\n    return (\n        <div className=\"mb-4\">\n            <label className=\"form-label\">{label}</label>\n            <div>\n                {options.map((option) => (\n                    <div\n                        key={option.name + \"_\" + option.value}\n                        className=\"form-check form-check-inline\"\n                    >\n                        <input\n                            className=\"form-check-input\"\n                            type=\"radio\"\n                            name={name}\n                            id={option.name + \"_\" + option.value}\n                            checked={option.value === value}\n                            value={option.value}\n                            onChange={handleChange}\n                        />\n                        <label\n                            className=\"form-check-label\"\n                            htmlFor={option.name + \"_\" + option.value}\n                        >\n                            {option.name}\n                        </label>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nRadioField.propTypes = {\n    options: PropTypes.array,\n    name: PropTypes.string,\n    onChange: PropTypes.func,\n    value: PropTypes.string,\n    label: PropTypes.string\n};\n\nexport default RadioField;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAAC;AAEnC,MAAMC,UAAU,GAAG,QAA+C;EAAA,IAA9C;IAAEC,OAAO;IAAEC,IAAI;IAAEC,QAAQ;IAAEC,KAAK;IAAEC;EAAM,CAAC;EACzD,MAAMC,YAAY,GAAG,SAAgB;IAAA,IAAf;MAAEC;IAAO,CAAC;IAC5BJ,QAAQ,CAAC;MAAED,IAAI,EAAEK,MAAM,CAACL,IAAI;MAAEE,KAAK,EAAEG,MAAM,CAACH;IAAM,CAAC,CAAC;EACxD,CAAC;EACD,oBACI;IAAK,SAAS,EAAC,MAAM;IAAA,wBACjB;MAAO,SAAS,EAAC,YAAY;MAAA,UAAEC;IAAK;MAAA;MAAA;MAAA;IAAA,QAAS,eAC7C;MAAA,UACKJ,OAAO,CAACO,GAAG,CAAEC,MAAM,iBAChB;QAEI,SAAS,EAAC,8BAA8B;QAAA,wBAExC;UACI,SAAS,EAAC,kBAAkB;UAC5B,IAAI,EAAC,OAAO;UACZ,IAAI,EAAEP,IAAK;UACX,EAAE,EAAEO,MAAM,CAACP,IAAI,GAAG,GAAG,GAAGO,MAAM,CAACL,KAAM;UACrC,OAAO,EAAEK,MAAM,CAACL,KAAK,KAAKA,KAAM;UAChC,KAAK,EAAEK,MAAM,CAACL,KAAM;UACpB,QAAQ,EAAEE;QAAa;UAAA;UAAA;UAAA;QAAA,QACzB,eACF;UACI,SAAS,EAAC,kBAAkB;UAC5B,OAAO,EAAEG,MAAM,CAACP,IAAI,GAAG,GAAG,GAAGO,MAAM,CAACL,KAAM;UAAA,UAEzCK,MAAM,CAACP;QAAI;UAAA;UAAA;UAAA;QAAA,QACR;MAAA,GAjBHO,MAAM,CAACP,IAAI,GAAG,GAAG,GAAGO,MAAM,CAACL,KAAK;QAAA;QAAA;QAAA;MAAA,QAmB5C;IAAC;MAAA;MAAA;MAAA;IAAA,QACA;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC;AAAC,KAjCIJ,UAAU;AAmChBA,UAAU,CAACU,SAAS,GAAG;EACnBT,OAAO,EAAEF,SAAS,CAACY,KAAK;EACxBT,IAAI,EAAEH,SAAS,CAACa,MAAM;EACtBT,QAAQ,EAAEJ,SAAS,CAACc,IAAI;EACxBT,KAAK,EAAEL,SAAS,CAACa,MAAM;EACvBP,KAAK,EAAEN,SAAS,CAACa;AACrB,CAAC;AAED,eAAeZ,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}