{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport isOutdated from \"../utils/isOutdated\";\nimport adminService from \"../services/admin.service\";\nconst adminSlice = createSlice({\n  name: \"admin\",\n  initialState: {\n    entities: null,\n    isLoading: true,\n    error: null,\n    lastFetch: null\n  },\n  reducers: {\n    adminRequested: state => {\n      state.isLoading = true;\n    },\n    adminReceived: (state, action) => {\n      state.entities = action.payload;\n      state.lastFetch = Date.now();\n      state.isLoading = false;\n    },\n    adminRequestFiled: (state, action) => {\n      state.error = action.payload;\n      state.isLoading = false;\n    }\n  }\n});\nconst {\n  reducer: adminReducer,\n  actions\n} = adminSlice;\nconst {\n  adminRequested,\n  adminReceived,\n  adminRequestFiled\n} = actions;\nexport const loadAdminList = () => async (dispatch, getState) => {\n  const {\n    lastFetch\n  } = getState().items;\n  if (isOutdated(lastFetch)) {\n    dispatch(adminRequested());\n    try {\n      const {\n        content\n      } = await adminService.fetchAll();\n      dispatch(adminReceived(content));\n    } catch (error) {\n      dispatch(adminRequestFiled(error.message));\n    }\n  }\n};\nexport const getAdmins = () => state => state.admin.entities;\nexport const getAdminById = email => state => {\n  if (state.admin.entities) {\n    return state.admin.entities.find(a => a._id === email);\n  }\n};\nexport default adminReducer;","map":{"version":3,"names":["createSlice","isOutdated","adminService","adminSlice","name","initialState","entities","isLoading","error","lastFetch","reducers","adminRequested","state","adminReceived","action","payload","Date","now","adminRequestFiled","reducer","adminReducer","actions","loadAdminList","dispatch","getState","items","content","fetchAll","message","getAdmins","admin","getAdminById","email","find","a","_id"],"sources":["/Users/dariabrusnitsina/Yandex.Disk.localized/Programming/Projects/react-e-commerce/client/src/store/admin.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport isOutdated from \"../utils/isOutdated\";\nimport adminService from \"../services/admin.service\";\n\nconst adminSlice = createSlice({\n    name: \"admin\",\n    initialState: {\n        entities: null,\n        isLoading: true,\n        error: null,\n        lastFetch: null\n    },\n    reducers: {\n        adminRequested: (state) => {\n            state.isLoading = true;\n        },\n        adminReceived: (state, action) => {\n            state.entities = action.payload;\n            state.lastFetch = Date.now();\n            state.isLoading = false;\n        },\n        adminRequestFiled: (state, action) => {\n            state.error = action.payload;\n            state.isLoading = false;\n        }\n    }\n});\n\nconst { reducer: adminReducer, actions } = adminSlice;\nconst { adminRequested, adminReceived, adminRequestFiled } = actions;\n\nexport const loadAdminList = () => async (dispatch, getState) => {\n    const { lastFetch } = getState().items;\n    if (isOutdated(lastFetch)) {\n        dispatch(adminRequested());\n        try {\n            const { content } = await adminService.fetchAll();\n            dispatch(adminReceived(content));\n        } catch (error) {\n            dispatch(adminRequestFiled(error.message));\n        }\n    }\n};\n\nexport const getAdmins = () => (state) => state.admin.entities;\n\nexport const getAdminById = (email) => (state) => {\n    if (state.admin.entities) {\n        return state.admin.entities.find((a) => a._id === email);\n    }\n};\n\nexport default adminReducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,UAAU,MAAM,qBAAqB;AAC5C,OAAOC,YAAY,MAAM,2BAA2B;AAEpD,MAAMC,UAAU,GAAGH,WAAW,CAAC;EAC3BI,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACVC,QAAQ,EAAE,IAAI;IACdC,SAAS,EAAE,IAAI;IACfC,KAAK,EAAE,IAAI;IACXC,SAAS,EAAE;EACf,CAAC;EACDC,QAAQ,EAAE;IACNC,cAAc,EAAGC,KAAK,IAAK;MACvBA,KAAK,CAACL,SAAS,GAAG,IAAI;IAC1B,CAAC;IACDM,aAAa,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC9BF,KAAK,CAACN,QAAQ,GAAGQ,MAAM,CAACC,OAAO;MAC/BH,KAAK,CAACH,SAAS,GAAGO,IAAI,CAACC,GAAG,EAAE;MAC5BL,KAAK,CAACL,SAAS,GAAG,KAAK;IAC3B,CAAC;IACDW,iBAAiB,EAAE,CAACN,KAAK,EAAEE,MAAM,KAAK;MAClCF,KAAK,CAACJ,KAAK,GAAGM,MAAM,CAACC,OAAO;MAC5BH,KAAK,CAACL,SAAS,GAAG,KAAK;IAC3B;EACJ;AACJ,CAAC,CAAC;AAEF,MAAM;EAAEY,OAAO,EAAEC,YAAY;EAAEC;AAAQ,CAAC,GAAGlB,UAAU;AACrD,MAAM;EAAEQ,cAAc;EAAEE,aAAa;EAAEK;AAAkB,CAAC,GAAGG,OAAO;AAEpE,OAAO,MAAMC,aAAa,GAAG,MAAM,OAAOC,QAAQ,EAAEC,QAAQ,KAAK;EAC7D,MAAM;IAAEf;EAAU,CAAC,GAAGe,QAAQ,EAAE,CAACC,KAAK;EACtC,IAAIxB,UAAU,CAACQ,SAAS,CAAC,EAAE;IACvBc,QAAQ,CAACZ,cAAc,EAAE,CAAC;IAC1B,IAAI;MACA,MAAM;QAAEe;MAAQ,CAAC,GAAG,MAAMxB,YAAY,CAACyB,QAAQ,EAAE;MACjDJ,QAAQ,CAACV,aAAa,CAACa,OAAO,CAAC,CAAC;IACpC,CAAC,CAAC,OAAOlB,KAAK,EAAE;MACZe,QAAQ,CAACL,iBAAiB,CAACV,KAAK,CAACoB,OAAO,CAAC,CAAC;IAC9C;EACJ;AACJ,CAAC;AAED,OAAO,MAAMC,SAAS,GAAG,MAAOjB,KAAK,IAAKA,KAAK,CAACkB,KAAK,CAACxB,QAAQ;AAE9D,OAAO,MAAMyB,YAAY,GAAIC,KAAK,IAAMpB,KAAK,IAAK;EAC9C,IAAIA,KAAK,CAACkB,KAAK,CAACxB,QAAQ,EAAE;IACtB,OAAOM,KAAK,CAACkB,KAAK,CAACxB,QAAQ,CAAC2B,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,GAAG,KAAKH,KAAK,CAAC;EAC5D;AACJ,CAAC;AAED,eAAeZ,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}