{"ast":null,"code":"import axios from \"axios\";\nimport localStorageService from \"./localStorage.service\";\nimport config from \"../config.json\";\nconst httpAuth = axios.create({\n  baseURL: config.apiEndpoint + \"/auth/\"\n});\nconst authService = {\n  register: async _ref => {\n    let {\n      email,\n      password\n    } = _ref;\n    const {\n      data\n    } = await httpAuth.post(`signUp`, {\n      email,\n      password,\n      returnSecureToken: true\n    });\n    return data;\n  },\n  login: async _ref2 => {\n    let {\n      email,\n      password\n    } = _ref2;\n    const {\n      data\n    } = await httpAuth.post(`signInWithPassword`, {\n      email,\n      password,\n      returnSecureToken: true\n    });\n    return data;\n  },\n  refresh: async () => {\n    const {\n      data\n    } = await httpAuth.post(\"token\", {\n      grant_type: \"refresh_token\",\n      refresh_token: localStorageService.getRefreshToken()\n    });\n    return data;\n  }\n};\nexport default authService;","map":{"version":3,"names":["axios","localStorageService","config","httpAuth","create","baseURL","apiEndpoint","authService","register","email","password","data","post","returnSecureToken","login","refresh","grant_type","refresh_token","getRefreshToken"],"sources":["/Users/dariabrusnitsina/Yandex.Disk.localized/Programming/Projects/react-e-commerce/client/src/services/auth.service.js"],"sourcesContent":["import axios from \"axios\";\nimport localStorageService from \"./localStorage.service\";\nimport config from \"../config.json\"\n\nconst httpAuth = axios.create({\n    baseURL: config.apiEndpoint + \"/auth/\"\n});\n\nconst authService = {\n    register: async ({ email, password }) => {\n        const { data } = await httpAuth.post(`signUp`, {\n            email,\n            password,\n            returnSecureToken: true\n        });\n        return data;\n    },\n    login: async ({ email, password }) => {\n        const { data } = await httpAuth.post(`signInWithPassword`, {\n            email,\n            password,\n            returnSecureToken: true\n        });\n        return data;\n    },\n    refresh: async () => {\n        const { data } = await httpAuth.post(\"token\", {\n            grant_type: \"refresh_token\",\n            refresh_token: localStorageService.getRefreshToken()\n        });\n        return data;\n    }\n};\n\nexport default authService;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,mBAAmB,MAAM,wBAAwB;AACxD,OAAOC,MAAM,MAAM,gBAAgB;AAEnC,MAAMC,QAAQ,GAAGH,KAAK,CAACI,MAAM,CAAC;EAC1BC,OAAO,EAAEH,MAAM,CAACI,WAAW,GAAG;AAClC,CAAC,CAAC;AAEF,MAAMC,WAAW,GAAG;EAChBC,QAAQ,EAAE,cAA+B;IAAA,IAAxB;MAAEC,KAAK;MAAEC;IAAS,CAAC;IAChC,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAE,QAAO,EAAE;MAC3CH,KAAK;MACLC,QAAQ;MACRG,iBAAiB,EAAE;IACvB,CAAC,CAAC;IACF,OAAOF,IAAI;EACf,CAAC;EACDG,KAAK,EAAE,eAA+B;IAAA,IAAxB;MAAEL,KAAK;MAAEC;IAAS,CAAC;IAC7B,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAE,oBAAmB,EAAE;MACvDH,KAAK;MACLC,QAAQ;MACRG,iBAAiB,EAAE;IACvB,CAAC,CAAC;IACF,OAAOF,IAAI;EACf,CAAC;EACDI,OAAO,EAAE,YAAY;IACjB,MAAM;MAAEJ;IAAK,CAAC,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,OAAO,EAAE;MAC1CI,UAAU,EAAE,eAAe;MAC3BC,aAAa,EAAEhB,mBAAmB,CAACiB,eAAe;IACtD,CAAC,CAAC;IACF,OAAOP,IAAI;EACf;AACJ,CAAC;AAED,eAAeJ,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}