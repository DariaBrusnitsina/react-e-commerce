{"ast":null,"code":"var _jsxFileName = \"/Users/dariabrusnitsina/Yandex.Disk.localized/Programming/Projects/react-e-commerce/client/src/components/ui/form/textField.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextField = _ref => {\n  _s();\n  let {\n    label,\n    type,\n    name,\n    value,\n    onChange,\n    error\n  } = _ref;\n  const [showPassword, setShowPassword] = useState(false);\n  const handleChange = _ref2 => {\n    let {\n      target\n    } = _ref2;\n    onChange({\n      name: target.name,\n      value: target.value\n    });\n  };\n  const getInputClasses = () => {\n    return \"form-control\" + (error ? \" is-invalid\" : \"\");\n  };\n  const toggleShowPassword = () => {\n    setShowPassword(prevState => !prevState);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-element\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: name,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group has-validation\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: getInputClasses(),\n        type: showPassword ? \"text\" : type,\n        id: name,\n        value: value,\n        name: name,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), type === \"password\" && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-outline-secondary\",\n        type: \"button\",\n        onClick: toggleShowPassword,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bi bi-eye\" + (showPassword ? \"-slash-fill\" : \"-fill\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 123\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 34\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"invalid-feedback\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 13\n  }, this);\n};\n_s(TextField, \"daguiRHWMFkqPgCh/ppD7CF5VuQ=\");\n_c = TextField;\nTextField.defaultProps = {\n  type: \"text\"\n};\nTextField.propTypes = {\n  label: PropTypes.string,\n  type: PropTypes.string,\n  name: PropTypes.string,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  error: PropTypes.string\n};\nexport default TextField;\nvar _c;\n$RefreshReg$(_c, \"TextField\");","map":{"version":3,"names":["React","useState","PropTypes","TextField","label","type","name","value","onChange","error","showPassword","setShowPassword","handleChange","target","getInputClasses","toggleShowPassword","prevState","defaultProps","propTypes","string","func"],"sources":["/Users/dariabrusnitsina/Yandex.Disk.localized/Programming/Projects/react-e-commerce/client/src/components/ui/form/textField.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst TextField = ({ label, type, name, value, onChange, error }) => {\n    const [showPassword, setShowPassword] = useState(false);\n\n    const handleChange = ({ target }) => {\n        onChange({ name: target.name, value: target.value });\n    };\n    const getInputClasses = () => {\n        return \"form-control\" + (error ? \" is-invalid\" : \"\");\n    };\n    const toggleShowPassword = () => {\n        setShowPassword((prevState) => !prevState);\n    };\n    return (<div className=\"input-element\">\n        <label htmlFor={name}>{label}</label>\n    <div className=\"input-group has-validation\">\n        <input className={getInputClasses()} type={showPassword ? \"text\" : type} id={name} value={value} name={name} onChange={onChange}/>\n        { type === \"password\" && <button className=\"btn btn-outline-secondary\" type=\"button\" onClick={toggleShowPassword}><i className={\"bi bi-eye\" + (showPassword ? \"-slash-fill\" : \"-fill\")}></i></button> }\n        {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n</div>\n    );\n};\nTextField.defaultProps = {\n    type: \"text\"\n};\nTextField.propTypes = {\n    label: PropTypes.string,\n    type: PropTypes.string,\n    name: PropTypes.string,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    error: PropTypes.string\n};\n\nexport default TextField;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,YAAY;AAAC;AAEnC,MAAMC,SAAS,GAAG,QAAmD;EAAA;EAAA,IAAlD;IAAEC,KAAK;IAAEC,IAAI;IAAEC,IAAI;IAAEC,KAAK;IAAEC,QAAQ;IAAEC;EAAM,CAAC;EAC5D,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMW,YAAY,GAAG,SAAgB;IAAA,IAAf;MAAEC;IAAO,CAAC;IAC5BL,QAAQ,CAAC;MAAEF,IAAI,EAAEO,MAAM,CAACP,IAAI;MAAEC,KAAK,EAAEM,MAAM,CAACN;IAAM,CAAC,CAAC;EACxD,CAAC;EACD,MAAMO,eAAe,GAAG,MAAM;IAC1B,OAAO,cAAc,IAAIL,KAAK,GAAG,aAAa,GAAG,EAAE,CAAC;EACxD,CAAC;EACD,MAAMM,kBAAkB,GAAG,MAAM;IAC7BJ,eAAe,CAAEK,SAAS,IAAK,CAACA,SAAS,CAAC;EAC9C,CAAC;EACD,oBAAQ;IAAK,SAAS,EAAC,eAAe;IAAA,wBAClC;MAAO,OAAO,EAAEV,IAAK;MAAA,UAAEF;IAAK;MAAA;MAAA;MAAA;IAAA,QAAS,eACzC;MAAK,SAAS,EAAC,4BAA4B;MAAA,wBACvC;QAAO,SAAS,EAAEU,eAAe,EAAG;QAAC,IAAI,EAAEJ,YAAY,GAAG,MAAM,GAAGL,IAAK;QAAC,EAAE,EAAEC,IAAK;QAAC,KAAK,EAAEC,KAAM;QAAC,IAAI,EAAED,IAAK;QAAC,QAAQ,EAAEE;MAAS;QAAA;QAAA;QAAA;MAAA,QAAE,EAChIH,IAAI,KAAK,UAAU,iBAAI;QAAQ,SAAS,EAAC,2BAA2B;QAAC,IAAI,EAAC,QAAQ;QAAC,OAAO,EAAEU,kBAAmB;QAAA,uBAAC;UAAG,SAAS,EAAE,WAAW,IAAIL,YAAY,GAAG,aAAa,GAAG,OAAO;QAAE;UAAA;UAAA;UAAA;QAAA;MAAK;QAAA;QAAA;QAAA;MAAA,QAAS,EACpMD,KAAK,iBAAI;QAAK,SAAS,EAAC,kBAAkB;QAAA,UAAEA;MAAK;QAAA;QAAA;QAAA;MAAA,QAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QACvD;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEN,CAAC;AAAC,GArBIN,SAAS;AAAA,KAATA,SAAS;AAsBfA,SAAS,CAACc,YAAY,GAAG;EACrBZ,IAAI,EAAE;AACV,CAAC;AACDF,SAAS,CAACe,SAAS,GAAG;EAClBd,KAAK,EAAEF,SAAS,CAACiB,MAAM;EACvBd,IAAI,EAAEH,SAAS,CAACiB,MAAM;EACtBb,IAAI,EAAEJ,SAAS,CAACiB,MAAM;EACtBZ,KAAK,EAAEL,SAAS,CAACiB,MAAM;EACvBX,QAAQ,EAAEN,SAAS,CAACkB,IAAI;EACxBX,KAAK,EAAEP,SAAS,CAACiB;AACrB,CAAC;AAED,eAAehB,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}