{"ast":null,"code":"var _jsxFileName = \"/Users/dariabrusnitsina/Yandex.Disk.localized/Programming/Projects/react-e-commerce/client/src/components/common/form/textField.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CssClasses = {\n  LABEL: \"input-label\",\n  FIELD: \"input-field\",\n  NULL: \"input-group is-null\",\n  INVALID: \"input-group is-invalid\",\n  VALID: \"input-group\",\n  EYE: \"eye-btn\",\n  FEEDBACK: \"invalid-feedback\"\n};\nconst TextField = _ref => {\n  _s();\n  let {\n    label,\n    type,\n    name,\n    value,\n    onChange,\n    error\n  } = _ref;\n  const [showPassword, setShowPassword] = useState(false);\n  console.log(error);\n  const handleChange = _ref2 => {\n    let {\n      target\n    } = _ref2;\n    onChange({\n      name: target.name,\n      value: target.value\n    });\n  };\n  const getInputClasses = () => {\n    if (error) {\n      if (!value) {\n        return CssClasses.NULL;\n      } else {\n        return CssClasses.INVALID;\n      }\n    } else {\n      return CssClasses.VALID;\n    }\n  };\n  const toggleShowPassword = () => {\n    setShowPassword(prevState => !prevState);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: getInputClasses(),\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: CssClasses.LABEL,\n      htmlFor: name,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: showPassword ? \"text\" : type,\n        id: name,\n        name: name,\n        value: value,\n        onChange: handleChange,\n        className: CssClasses.FIELD\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), type === \"password\" && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: CssClasses.EYE,\n        type: \"button\",\n        onClick: toggleShowPassword,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bi bi-eye\" + (showPassword ? \"-slash\" : \"\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: CssClasses.FEEDBACK,\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(TextField, \"daguiRHWMFkqPgCh/ppD7CF5VuQ=\");\n_c = TextField;\nexport default TextField;\nvar _c;\n$RefreshReg$(_c, \"TextField\");","map":{"version":3,"names":["React","useState","CssClasses","LABEL","FIELD","NULL","INVALID","VALID","EYE","FEEDBACK","TextField","label","type","name","value","onChange","error","showPassword","setShowPassword","console","log","handleChange","target","getInputClasses","toggleShowPassword","prevState"],"sources":["/Users/dariabrusnitsina/Yandex.Disk.localized/Programming/Projects/react-e-commerce/client/src/components/common/form/textField.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst CssClasses = {\n    LABEL: \"input-label\",\n    FIELD: \"input-field\",\n    NULL: \"input-group is-null\",\n    INVALID: \"input-group is-invalid\",\n    VALID: \"input-group\",\n    EYE: \"eye-btn\",\n    FEEDBACK: \"invalid-feedback\"\n}\n\nconst TextField = ({ label, type, name, value, onChange, error }) => {\n    const [showPassword, setShowPassword] = useState(false);\n\n    console.log(error)\n\n    const handleChange = ({ target }) => {\n        onChange({ name: target.name, value: target.value });\n    };\n\n    const getInputClasses = () => {\n        if (error) {\n            if (!value) {\n                return CssClasses.NULL\n            } else {\n                return CssClasses.INVALID\n            }\n        } else {\n            return CssClasses.VALID\n        }\n    };\n\n    const toggleShowPassword = () => {\n        setShowPassword((prevState) => !prevState);\n    };\n\n    return (\n        <div className={getInputClasses()}>\n            <label className={CssClasses.LABEL} htmlFor={name}>{label}</label>\n            <div>\n                <input\n                    type={showPassword ? \"text\" : type}\n                    id={name}\n                    name={name}\n                    value={value}\n                    onChange={handleChange}\n                    className={CssClasses.FIELD}\n                />\n                {type === \"password\" && (\n                        <button\n                            className={CssClasses.EYE}\n                            type=\"button\"\n                            onClick={toggleShowPassword}\n                        >\n                            <i\n                                className={\n                                    \"bi bi-eye\" + (showPassword ? \"-slash\" : \"\")\n                                }\n                            ></i>\n                        </button>\n                )}\n                {error && <div className={CssClasses.FEEDBACK}>{error}</div>}\n            </div>\n        </div>\n    );\n};\n\nexport default TextField;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAExC,MAAMC,UAAU,GAAG;EACfC,KAAK,EAAE,aAAa;EACpBC,KAAK,EAAE,aAAa;EACpBC,IAAI,EAAE,qBAAqB;EAC3BC,OAAO,EAAE,wBAAwB;EACjCC,KAAK,EAAE,aAAa;EACpBC,GAAG,EAAE,SAAS;EACdC,QAAQ,EAAE;AACd,CAAC;AAED,MAAMC,SAAS,GAAG,QAAmD;EAAA;EAAA,IAAlD;IAAEC,KAAK;IAAEC,IAAI;IAAEC,IAAI;IAAEC,KAAK;IAAEC,QAAQ;IAAEC;EAAM,CAAC;EAC5D,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAEvDkB,OAAO,CAACC,GAAG,CAACJ,KAAK,CAAC;EAElB,MAAMK,YAAY,GAAG,SAAgB;IAAA,IAAf;MAAEC;IAAO,CAAC;IAC5BP,QAAQ,CAAC;MAAEF,IAAI,EAAES,MAAM,CAACT,IAAI;MAAEC,KAAK,EAAEQ,MAAM,CAACR;IAAM,CAAC,CAAC;EACxD,CAAC;EAED,MAAMS,eAAe,GAAG,MAAM;IAC1B,IAAIP,KAAK,EAAE;MACP,IAAI,CAACF,KAAK,EAAE;QACR,OAAOZ,UAAU,CAACG,IAAI;MAC1B,CAAC,MAAM;QACH,OAAOH,UAAU,CAACI,OAAO;MAC7B;IACJ,CAAC,MAAM;MACH,OAAOJ,UAAU,CAACK,KAAK;IAC3B;EACJ,CAAC;EAED,MAAMiB,kBAAkB,GAAG,MAAM;IAC7BN,eAAe,CAAEO,SAAS,IAAK,CAACA,SAAS,CAAC;EAC9C,CAAC;EAED,oBACI;IAAK,SAAS,EAAEF,eAAe,EAAG;IAAA,wBAC9B;MAAO,SAAS,EAAErB,UAAU,CAACC,KAAM;MAAC,OAAO,EAAEU,IAAK;MAAA,UAAEF;IAAK;MAAA;MAAA;MAAA;IAAA,QAAS,eAClE;MAAA,wBACI;QACI,IAAI,EAAEM,YAAY,GAAG,MAAM,GAAGL,IAAK;QACnC,EAAE,EAAEC,IAAK;QACT,IAAI,EAAEA,IAAK;QACX,KAAK,EAAEC,KAAM;QACb,QAAQ,EAAEO,YAAa;QACvB,SAAS,EAAEnB,UAAU,CAACE;MAAM;QAAA;QAAA;QAAA;MAAA,QAC9B,EACDQ,IAAI,KAAK,UAAU,iBACZ;QACI,SAAS,EAAEV,UAAU,CAACM,GAAI;QAC1B,IAAI,EAAC,QAAQ;QACb,OAAO,EAAEgB,kBAAmB;QAAA,uBAE5B;UACI,SAAS,EACL,WAAW,IAAIP,YAAY,GAAG,QAAQ,GAAG,EAAE;QAC9C;UAAA;UAAA;UAAA;QAAA;MACA;QAAA;QAAA;QAAA;MAAA,QAEhB,EACAD,KAAK,iBAAI;QAAK,SAAS,EAAEd,UAAU,CAACO,QAAS;QAAA,UAAEO;MAAK;QAAA;QAAA;QAAA;MAAA,QAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QAC1D;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC;AAAC,GAtDIN,SAAS;AAAA,KAATA,SAAS;AAwDf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}