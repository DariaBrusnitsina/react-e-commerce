{"ast":null,"code":"export function validator(data, config) {\n  const errors = {};\n  function validate(validateMethod, data, config) {\n    let statusValidate;\n    switch (validateMethod) {\n      case \"isRequired\":\n        if (typeof data === \"boolean\") {\n          statusValidate = !data;\n        } else {\n          statusValidate = data.trim() === \"\";\n        }\n        break;\n      case \"isEmail\":\n        {\n          const emailRegExp = /^\\S+@\\S+\\.\\S+$/g;\n          statusValidate = !emailRegExp.test(data);\n          break;\n        }\n      case \"isCapitalSymbol\":\n        {\n          const capitalRegExp = /[A-Z]+/g;\n          statusValidate = !capitalRegExp.test(data);\n          break;\n        }\n      case \"isContainDigit\":\n        {\n          const digitRegExp = /\\d+/g;\n          statusValidate = !digitRegExp.test(data);\n          break;\n        }\n      case \"min\":\n        {\n          statusValidate = data.length < config.value;\n          break;\n        }\n    }\n    if (statusValidate) return config.message;\n  }\n  for (const fieldName in data) {\n    for (const validateMethod in config[fieldName]) {\n      const error = validate(validateMethod, data[fieldName], config[fieldName][validateMethod]);\n      if (error && !errors[fieldName]) {\n        errors[fieldName] = error;\n      }\n    }\n  }\n  return errors;\n}","map":{"version":3,"names":["validator","data","config","errors","validate","validateMethod","statusValidate","trim","emailRegExp","test","capitalRegExp","digitRegExp","length","value","message","fieldName","error"],"sources":["/Users/dariabrusnitsina/Yandex.Disk.localized/Programming/Projects/react-e-commerce/client/src/utils/validator.js"],"sourcesContent":["export function validator(data, config) {\n    const errors = {};\n    function validate(validateMethod, data, config) {\n        let statusValidate;\n        switch (validateMethod) {\n        case \"isRequired\":\n            if (typeof data === \"boolean\") {\n                statusValidate = !data;\n            } else {\n                statusValidate = data.trim() === \"\";\n            }\n            break;\n        case \"isEmail\": {\n            const emailRegExp = /^\\S+@\\S+\\.\\S+$/g;\n            statusValidate = !emailRegExp.test(data);\n            break;\n        }\n        case \"isCapitalSymbol\": {\n            const capitalRegExp = /[A-Z]+/g;\n            statusValidate = !capitalRegExp.test(data);\n            break;\n        }\n        case \"isContainDigit\": {\n            const digitRegExp = /\\d+/g;\n            statusValidate = !digitRegExp.test(data);\n            break;\n        }\n        case \"min\": {\n            statusValidate = data.length < config.value;\n            break;\n        }\n        }\n        if (statusValidate) return config.message;\n    }\n\n    for (const fieldName in data) {\n        for (const validateMethod in config[fieldName]) {\n            const error = validate(validateMethod, data[fieldName], config[fieldName][validateMethod]);\n            if (error && !errors[fieldName]) {\n                errors[fieldName] = error;\n            }\n        }\n    }\n    return errors;\n}\n"],"mappings":"AAAA,OAAO,SAASA,SAAS,CAACC,IAAI,EAAEC,MAAM,EAAE;EACpC,MAAMC,MAAM,GAAG,CAAC,CAAC;EACjB,SAASC,QAAQ,CAACC,cAAc,EAAEJ,IAAI,EAAEC,MAAM,EAAE;IAC5C,IAAII,cAAc;IAClB,QAAQD,cAAc;MACtB,KAAK,YAAY;QACb,IAAI,OAAOJ,IAAI,KAAK,SAAS,EAAE;UAC3BK,cAAc,GAAG,CAACL,IAAI;QAC1B,CAAC,MAAM;UACHK,cAAc,GAAGL,IAAI,CAACM,IAAI,EAAE,KAAK,EAAE;QACvC;QACA;MACJ,KAAK,SAAS;QAAE;UACZ,MAAMC,WAAW,GAAG,iBAAiB;UACrCF,cAAc,GAAG,CAACE,WAAW,CAACC,IAAI,CAACR,IAAI,CAAC;UACxC;QACJ;MACA,KAAK,iBAAiB;QAAE;UACpB,MAAMS,aAAa,GAAG,SAAS;UAC/BJ,cAAc,GAAG,CAACI,aAAa,CAACD,IAAI,CAACR,IAAI,CAAC;UAC1C;QACJ;MACA,KAAK,gBAAgB;QAAE;UACnB,MAAMU,WAAW,GAAG,MAAM;UAC1BL,cAAc,GAAG,CAACK,WAAW,CAACF,IAAI,CAACR,IAAI,CAAC;UACxC;QACJ;MACA,KAAK,KAAK;QAAE;UACRK,cAAc,GAAGL,IAAI,CAACW,MAAM,GAAGV,MAAM,CAACW,KAAK;UAC3C;QACJ;IAAC;IAED,IAAIP,cAAc,EAAE,OAAOJ,MAAM,CAACY,OAAO;EAC7C;EAEA,KAAK,MAAMC,SAAS,IAAId,IAAI,EAAE;IAC1B,KAAK,MAAMI,cAAc,IAAIH,MAAM,CAACa,SAAS,CAAC,EAAE;MAC5C,MAAMC,KAAK,GAAGZ,QAAQ,CAACC,cAAc,EAAEJ,IAAI,CAACc,SAAS,CAAC,EAAEb,MAAM,CAACa,SAAS,CAAC,CAACV,cAAc,CAAC,CAAC;MAC1F,IAAIW,KAAK,IAAI,CAACb,MAAM,CAACY,SAAS,CAAC,EAAE;QAC7BZ,MAAM,CAACY,SAAS,CAAC,GAAGC,KAAK;MAC7B;IACJ;EACJ;EACA,OAAOb,MAAM;AACjB"},"metadata":{},"sourceType":"module","externalDependencies":[]}