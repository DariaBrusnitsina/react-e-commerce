{"ast":null,"code":"import httpService from \"./http.service\";\nimport localStorageService from \"./localStorage.service\";\nconst userEndpoint = \"/user/\";\nconst userService = {\n  get: async () => {\n    const {\n      content\n    } = await httpService.get(userEndpoint);\n    return {\n      content\n    };\n  },\n  create: async payload => {\n    const {\n      data\n    } = await httpService.put(userEndpoint + payload._id, payload);\n    return data;\n  },\n  getCurrentUser: async () => {\n    const {\n      data\n    } = await httpService.get(userEndpoint + localStorageService.getUserId());\n    return {\n      data\n    };\n  },\n  update: async payload => {\n    const {\n      data\n    } = await httpService.patch(userEndpoint + localStorageService.getUserId(), payload);\n    return data;\n  },\n  removeUser: async userId => {\n    const {\n      data\n    } = await httpService.delete(userEndpoint + userId);\n    return data;\n  }\n};\nexport default userService;","map":{"version":3,"names":["httpService","localStorageService","userEndpoint","userService","get","content","create","payload","data","put","_id","getCurrentUser","getUserId","update","patch","removeUser","userId","delete"],"sources":["/Users/dariabrusnitsina/Yandex.Disk.localized/Programming/Projects/react-e-commerce/client/src/services/user.service.js"],"sourcesContent":["import httpService from \"./http.service\";\nimport localStorageService from \"./localStorage.service\";\n\nconst userEndpoint = \"/user/\";\n\nconst userService = {\n    get: async () => {\n        const { content } = await httpService.get(userEndpoint);\n        return {content};\n    },\n    create: async (payload) => {\n        const { data } = await httpService.put(\n            userEndpoint + payload._id,\n            payload\n        );\n        return data;\n    },\n    getCurrentUser: async () => {\n        const { data } = await httpService.get(\n            userEndpoint + localStorageService.getUserId()\n        );\n        return {data};\n    },\n    update: async (payload) => {\n        const { data } = await httpService.patch(\n            userEndpoint + localStorageService.getUserId(),\n            payload\n        );\n        return data;\n    },\n    removeUser: async (userId) => {\n        const { data } = await httpService.delete(userEndpoint + userId);\n        return data;\n    }\n};\nexport default userService;\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,gBAAgB;AACxC,OAAOC,mBAAmB,MAAM,wBAAwB;AAExD,MAAMC,YAAY,GAAG,QAAQ;AAE7B,MAAMC,WAAW,GAAG;EAChBC,GAAG,EAAE,YAAY;IACb,MAAM;MAAEC;IAAQ,CAAC,GAAG,MAAML,WAAW,CAACI,GAAG,CAACF,YAAY,CAAC;IACvD,OAAO;MAACG;IAAO,CAAC;EACpB,CAAC;EACDC,MAAM,EAAE,MAAOC,OAAO,IAAK;IACvB,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMR,WAAW,CAACS,GAAG,CAClCP,YAAY,GAAGK,OAAO,CAACG,GAAG,EAC1BH,OAAO,CACV;IACD,OAAOC,IAAI;EACf,CAAC;EACDG,cAAc,EAAE,YAAY;IACxB,MAAM;MAAEH;IAAK,CAAC,GAAG,MAAMR,WAAW,CAACI,GAAG,CAClCF,YAAY,GAAGD,mBAAmB,CAACW,SAAS,EAAE,CACjD;IACD,OAAO;MAACJ;IAAI,CAAC;EACjB,CAAC;EACDK,MAAM,EAAE,MAAON,OAAO,IAAK;IACvB,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMR,WAAW,CAACc,KAAK,CACpCZ,YAAY,GAAGD,mBAAmB,CAACW,SAAS,EAAE,EAC9CL,OAAO,CACV;IACD,OAAOC,IAAI;EACf,CAAC;EACDO,UAAU,EAAE,MAAOC,MAAM,IAAK;IAC1B,MAAM;MAAER;IAAK,CAAC,GAAG,MAAMR,WAAW,CAACiB,MAAM,CAACf,YAAY,GAAGc,MAAM,CAAC;IAChE,OAAOR,IAAI;EACf;AACJ,CAAC;AACD,eAAeL,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}